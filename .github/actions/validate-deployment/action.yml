name: "Validate Deployment Files"
description: "Validates if the changed files require a deployment"

inputs:
  github_token:
    description: "GitHub token for API access"
    required: true

outputs:
  should_deploy:
    description: "Whether the changed files require a deployment"
    value: ${{ steps.validate.outputs.should_deploy }}

runs:
  using: "composite"
  steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Validate Changed Files
      id: validate
      shell: bash
      run: |
        # Files that should not trigger deployment
        EXCLUDED_PATTERNS=(
          ".github/**"
          "**/*.md"
          ".nvmrc"
          ".gitignore"
        )

        # Get the list of changed files based on event type
        if [[ "${{ github.event_name }}" == "pull_request" ]]; then
          BASE_REF="origin/${{ github.event.pull_request.base.ref }}"
          HEAD_REF="origin/${{ github.event.pull_request.head.ref }}"
          echo "Comparing $BASE_REF with $HEAD_REF"
          CHANGED_FILES=$(git diff --name-only "$BASE_REF" "$HEAD_REF")
        elif [[ "${{ github.event_name }}" == "push" ]]; then
          BASE_REF="${{ github.event.before }}"
          HEAD_REF="HEAD"
          echo "Comparing $BASE_REF with $HEAD_REF"
          CHANGED_FILES=$(git diff --name-only "$BASE_REF" "$HEAD_REF")
        else
          echo "Unsupported event type: ${{ github.event_name }}"
          echo "should_deploy=true" >> $GITHUB_OUTPUT
          exit 0
        fi

        # Check if any changed files are not in the excluded list
        SHOULD_DEPLOY=true
        for file in $CHANGED_FILES; do
          for pattern in "${EXCLUDED_PATTERNS[@]}"; do
            if [[ $file =~ ^${pattern//\*/.*}$ ]]; then
              SHOULD_DEPLOY=false
              echo "File $file matches excluded pattern $pattern"
              break 2
            fi
          done
        done

        echo "should_deploy=$SHOULD_DEPLOY" >> $GITHUB_OUTPUT
