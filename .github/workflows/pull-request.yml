name: Pull Request

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PREVIEW_PROJECT_ID }}
  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
  VERCEL_TEAM: ${{ vars.VERCEL_TEAM }}

jobs:
  Preview-Development:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
          cache: 'npm'

      - run: npm install
      - run: npm test
      - run: npm run lint --quiet
      - run: npm run build

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=$VERCEL_TOKEN
        
      - name: Deploy Project Artifacts to Vercel
      id: deploy
      run: |
        DEPLOY_URL=$(vercel deploy --token=$VERCEL_TOKEN --prod --scope=$VERCEL_TEAM)
        echo "deployment_url=$DEPLOY_URL" >> $GITHUB_ENV
        echo "Vercel Deployment URL: $DEPLOY_URL"

      - name: Post Vercel Deployment URL to PR
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const deploymentUrl = process.env.deployment_url.trim();
            const prNumber = context.payload.pull_request.number;
            const commentBody = `âœ¨ Preview available: [${deploymentUrl}](${deploymentUrl})`;

            // Create a comment on the PR
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: commentBody
            });
