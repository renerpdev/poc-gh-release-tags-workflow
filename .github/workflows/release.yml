name: Deploy Release to Production

on:
  release:
    types:
      - released

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  
jobs:
  download-assets:
    runs-on: ubuntu-latest
    outputs:
      assets-dir: ${{ steps.output-assets.outputs.assets-dir }}
    steps:
      - name: Create a directory for assets
        id: output-assets
        run: |
          mkdir -p release-assets
          echo "assets-dir=release-assets" >> $GITHUB_ENV

      - name: Download release assets
        uses: actions/download-artifact@v3
        with:
          repository: ${{ github.repository }}
          tag: ${{ github.event.release.tag_name }}
          destination: ${{ steps.output-assets.outputs.assets-dir }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: List downloaded assets
        run: ls -la ${{ steps.output-assets.outputs.assets-dir }}

  Deploy-Production:
    needs: download-assets
    runs-on: ubuntu-latest
    if: github.event.release.prerelease == 'false'
    environment:
      name: Production
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
          cache: 'npm'

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=$VERCEL_TOKEN

      - name: Deploy to Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_TEAM: ${{ vars.VERCEL_TEAM }}
        run: |
          echo "Deploying with assets from pre-release..."
          vercel deploy --prod --token=$VERCEL_TOKEN --files=$GITHUB_WORKSPACE/release-assets