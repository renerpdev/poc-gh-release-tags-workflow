name: Create Vercel Deployment (${{ github.event.inputs.environment }}) (${{ github.event.inputs.is_preview == 'true' && '(Preview)' || '' }})

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Select the environment"
        required: true
        type: choice
        options:
          - Development
          - Staging
          - Production
        default: Development
      is_preview:
        description: "Create a preview"
        required: true
        type: boolean
        default: false

concurrency:
  group: ${{ github.workflow }}-${{ github.event.inputs.environment }} ${{ github.event.inputs.is_preview == 'true' && '(Preview)' || '' }}
  cancel-in-progress: false

jobs:
  Create-Deployment:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.is_preview == 'false' && github.event.inputs.environment || null }}
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_TEAM: ${{ vars.VERCEL_TEAM }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Downloads also the tags
          ref: ${{ github.ref }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
          cache: 'npm'

      - run: npm install
      - run: npm test

      - name: Set Vercel Project ID
        run: |
          case "${{ github.event.inputs.environment }}" in
            Development)
              echo "VERCEL_PROJECT_ID=${{ secrets.VERCEL_DEV_PROJECT_ID }}" >> $GITHUB_ENV
              ;;
            Staging)
              echo "VERCEL_PROJECT_ID=${{ secrets.VERCEL_STAGING_PROJECT_ID }}" >> $GITHUB_ENV
              ;;
            Production)
              echo "VERCEL_PROJECT_ID=${{ secrets.VERCEL_PROD_PROJECT_ID }}" >> $GITHUB_ENV
              ;;
            *)
              echo "Unknown environment: ${{ github.event.inputs.environment }}"
              exit 1
              ;;
          esac
      
      - name: Pull Vercel Environment (Preview)
        if: github.event.inputs.is_preview == 'true'
        run: npx vercel pull --yes --environment=preview --token=$VERCEL_TOKEN
        
      - name: Pull Vercel Environment (Production)
        if: github.event.inputs.is_preview == 'false'
        run: npx vercel pull --yes --environment=production --token=$VERCEL_TOKEN

      - name: Build Project Artifacts (Preview)
        if: github.event.inputs.is_preview == 'true'
        run: npx vercel build --token=$VERCEL_TOKEN

      - name: Build Project Artifacts (Production)
        if: github.event.inputs.is_preview == 'false'
        run: npx vercel build --prod --token=$VERCEL_TOKEN

      - name: Deploy to Vercel (Preview)
        if: github.event.inputs.is_preview == 'true'
        run: npx vercel deploy --prebuilt --token=$VERCEL_TOKEN

      - name: Deploy to Vercel (Production)
        if: github.event.inputs.is_preview == 'false'
        run: npx vercel deploy --prod --prebuilt --token=$VERCEL_TOKEN